#!/usr/bin/env python3.8
import sys #this allows you to use the sys.exit command to quit/logout of the application
import subprocess
import time
import sys
import consolemenu


def main():
    print("\n\n\n\n StackDash v.1.0 \n")
    #time.sleep(1)
    print(" ")

    choice = input("""
    Supported 64-bit versions of Ubuntu:
     -Ubuntu Focal 20.04 LTS
     -Ubuntu Eoan 19.10
     -Ubuntu Bionic 18.04 LTS
     -Ubuntu Xenial 16.04 LTS
    
                                            1.   Install Docker Engine
                        
                                            2.   Deploy stacks menu

                                            3.   Quit
                        

    Please enter your choice:  """)
    if choice == "1" or choice =="1.":
        docker_install()
        print("Installing Docker Engine")
    elif choice == "2" or choice =="2.":
        stacks_main()
    elif choice == "3" or choice =="3.":
        sys.exit
    else:
        print("You must only select either 1, 2, or 3.")
        print("Please try again")
    
def docker_install():
    remove_old_docker = subprocess.run("sudo apt-get remove docker docker-engine docker.io containerd runc", capture_output=True, shell=True)
    print("\n\n\n\n\n\n\n\n*** Removed older versions of Docker. *** \n")
    time.sleep(2)

    update = subprocess.run("sudo apt-get update", capture_output=True, shell=True)
    print ("*** Downloaded package information from all configured resources. *** \n")
    
    https_repo = subprocess.run("sudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common -y", capture_output=True, shell=True)
    print ("*** Updated the apt index and install packages to allow apt to use a repository over HTTPS. ***\n")
    time.sleep(2)

    gpg_key = subprocess.run("curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -", capture_output=True, shell=True)
    print ("*** Added Docker's offical GPG key. *** \n")
    time.sleep(2)

    docker_repo = subprocess.run("sudo add-apt-repository 'deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable' \n", capture_output=True, shell=True)
    print ("*** Set up Docker's stable repository. *** \n")
    time.sleep(2)

    update_1 = subprocess.run("sudo apt-get update", capture_output=True, shell=True)
    print ("*** Re-downloaded package information from all configured resources. *** \n")
    time.sleep(2)

    install = subprocess.run("sudo apt-get install docker-ce docker-ce-cli containerd.io", capture_output=True, shell=True)
    print ("*** Installed the latest version of Docker Engine. *** \n")
    time.sleep(2)

    docker_status = subprocess.run("sudo systemctl status docker", shell=True)
    print ("*** Docker installation completed! *** \n")
    main()

def stacks_main():
    print("\n\n\n\n\n\n\n StackDash Deployments \n")
    #time.sleep(1)
    print()

    choice = input("""
|:----------------------------------------------------------------------------------------------------------------------------------------------------------------:| 
|   Stack Category  | Stack No. |      Container      |     CNAME Records    |                                     Description                                     |
|:-----------------:|:---------:|:-------------------:|:--------------------:|:-----------------------------------------------------------------------------------:|
|   Reverse Proxy   |     1     | Reverse Proxy Stack | trafefik.domain.com  | Traefik (pronounced traffic) is a modern HTTP reverse proxy and load balancer       |
|                   |           | -Traefik            |                      |                                                                                     |
|:----------------------------------------------------------------------------------------------------------------------------------------------------------------:|
| Docker Management |           |                     |                      |                                                                                     |
|                   |    2.1    | Portainer           | portainer.domain.com | Management UI for Docker containers, images, volumes and networks                   |
|                   |    2.2    | Watchtower          |                      | Keeps your containerized app images automatically up-to-date                        |
|                   |    2.3    | Apache Guacamole    | guac.domain.com      | Clientless remote gateway to VNC, RDP and SSH servers                               |
|                   |    2.4    | Full Stack          |                      | Deploy the complete Container Management Stack                                      |
|                   |    2.5    | Dashboard           | docker.domain.com    | Deploy a web page dashboard for this stack using Homer                              |
|:----------------------------------------------------------------------------------------------------------------------------------------------------------------:|
|       Media       |           |                     |                      |                                                                                     |
|                   |    3.1    | Plex                | plex.domain.com      | Client-server media play system                                                     |
|                   |    3.2    | Jackett             | jacket.domain.com    | A proxy server to make http queries to index torrent sites                          |
|                   |    3.3    | Radarr              | radarr.domain.com    | Monitors and searchs Jackett index for movies                                       |
|                   |    3.4    | qBittorrent         | qbit.domain.com      | Open-source alternative to uTorrent                                                 |
|                   |    3.5    | Full Stack          |                      | Deploy the complete Media Stack                                                     |
|                   |    3.6    | Dashboard           | media.domain.com     | Deploy a web page dashboard for this stack using Homer                              |
|:----------------------------------------------------------------------------------------------------------------------------------------------------------------:|
|        Data       |           |                     |                      |                                                                                     |
|                   |    4.1    | Nextcloud           | nextcloud.domain.com | A suite of client-software for creating and using file hosting services             |
|                   |    4.2    | Mayan EDMS          | mayan.domain.com     | A management system to categorize and store documents                               |
|                   |    4.3    | Snipe-IT            | it-assets.domain.com | Tracks hardware, software licenses and accessories for IT asset/operations managers |
|                   |    4.4    | wallabag            | walla.domain.com     | PHP application for saving and classifying webpages                                 |
|                   |    4.5    | photoprism          | photos.domain.com    | Go-powered app for browsing, organizing and sharing your photos                     |
|                   |    4.6    | BookStack           | bookstack.domain.com | A platform for storing and organizing information and documentation                 |
|                   |    4.7    | Full Stack          |                      | Deploy the complete Data Stack                                                      |
|                   |    4.8    | Dashboard           | data.domain.com      | Deploy a web page dashboard for this stack using Homer                              |
|:----------------------------------------------------------------------------------------------------------------------------------------------------------------:|
| Server Monitoring |           |                     |                      |                                                                                     |
|                   |     5     | Monitoring Stack    |                      | Scrapes your Docker & server infrastructure to display on Grafana dashboards        |
|                   |           | -Prometheus         | prom.domain.com      |                                                                                     |
|                   |           | -Grafana            | metrics.domain.com   |                                                                                     |
|                   |           | -Node-Exporter      |                      |                                                                                     |
|                   |           | -cadvisor           |                      |                                                                                     |
|:----------------------------------------------------------------------------------------------------------------------------------------------------------------:|
|  Hosting & DevOps |           |                     |                      |                                                                                     |
|                   |    6.1    | Ghost               | blog.domain.com      | Headless Node.js platform for blogging and content management                       |
|                   |    6.2    | WordPress           | wp.domain.com        | PHP online publishing platform                                                      |
|                   |    6.3    | DokuWiki            | dw.domain.com        | PHP wiki application                                                                |
|                   |    6.4    | GitLab              | gitlab.domain.com    | DevOps lifecycle tool, git repo, wiki, issue tracking, and CI/CD                    |
|                   |    6.5    | VS Code Server      | vs.domain.com        | Run VS Code on any machine anywhere and access it in the browser                    |
|                   |    6.6    | Full Stack          |                      | Deploy the complete Hosting & DevOps stack                                          |
|                   |    6.8    | Dashboard           | devops.domain.com    | Deploy a web page dashboard for this stack using Homer                              |
|:----------------------------------------------------------------------------------------------------------------------------------------------------------------:|
Enter Stack No. [enter Q to quit; M to go main-menu]: """)

    if choice == "1" or choice == "1.":
        traefik()
    if choice == "M" or choice == "m":
        main()
    elif choice == "Q" or choice =="q":
        sys.exit
    else:
        print("You must only select either 1, 2, or 3.")
        print("Please try again")

def traefik():
    env = open("/traefik/.env", "w")
    print("Add Environment Variables")
    stringlist = []

    for i in range(1):
        stringlist.append((input("Enter DOMAINNAME=<your domain name> " + str(i+1))) + "\n")

    for i in range(1):
        stringlist.append((input("Enter CLOUDFLARE_EMAIL=<your Cloudflare email address> " + str(i+2))) + "\n")

    for i in range(1):
        stringlist.append((input("Enter CLOUDFLARE_API_KEY=<your Cloudflare API Key> " + str(i+3))) + "\n")

    env.writelines(stringlist)

    traefik_install = subprocess.run("docker-compose -f /traefik/docker-compose.yml up -d", capture_output=True, shell=True)
    print ("*** Installed Traefik 2. *** \n")
    time.sleep(2)

main()

